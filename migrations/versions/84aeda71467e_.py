"""empty message

Revision ID: 84aeda71467e
Revises: ac53319919d7
Create Date: 2022-08-04 14:56:08.500547

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '84aeda71467e'
down_revision = 'ac53319919d7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('album_artist')
    op.drop_table('genre_song')
    op.drop_table('song_artist')
    op.drop_table('playlist_song')
    op.drop_table('playlist')
    op.drop_table('artists')
    op.drop_table('users')
    op.drop_table('genres')
    op.drop_table('songs')
    op.drop_table('album')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('song_artist',
    sa.Column('id_artist', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_song', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_artist'], ['artists.id'], name='song_artist_id_artist_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_song'], ['songs.id'], name='song_artist_id_song_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_artist', 'id_song', name='song_artist_pkey')
    )
    op.create_table('genre_song',
    sa.Column('id_genre', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_song', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_genre'], ['genres.id'], name='genre_song_id_genre_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_song'], ['songs.id'], name='genre_song_id_song_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_genre', 'id_song', name='genre_song_pkey')
    )
    op.create_table('playlist_song',
    sa.Column('id_playlist', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_song', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('num_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_playlist'], ['playlist.id'], name='playlist_song_id_playlist_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_song'], ['songs.id'], name='playlist_song_id_song_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_playlist', 'id_song', name='playlist_song_pkey')
    )
    op.create_table('songs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('num_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_album', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_album'], ['album.id'], name='songs_id_album_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='songs_pkey')
    )
    op.create_table('genres',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='genres_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name_surname', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('artists',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('artists_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('alias', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('name_surname', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('prova', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='artists_pkey'),
    sa.UniqueConstraint('alias', name='artists_alias_key'),
    sa.UniqueConstraint('email', name='artists_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('album_artist',
    sa.Column('id_artist', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_album', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id_album'], ['album.id'], name='album_artist_id_album_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_artist'], ['artists.id'], name='album_artist_id_artist_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_artist', 'id_album', name='album_artist_pkey')
    )
    op.create_table('playlist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('id_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], name='playlist_id_user_fkey'),
    sa.PrimaryKeyConstraint('id', name='playlist_pkey')
    )
    op.create_table('album',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='album_pkey')
    )
    # ### end Alembic commands ###
